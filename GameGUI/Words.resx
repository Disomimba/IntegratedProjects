<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAJE8bACIPGMAjDxnD4o7ZUWJO2R5iTtklIg7ZJ6JO2SjiDtkpog7ZKeJO2SmiTtkpIk7
        ZKGJO2SgiTtkoIk7ZKKIO2SmiTtkqIk7ZKiJO2SoiTtkqIk7ZKSJO2SXiTtkfIo7ZUyLPGYUfzleAJM9
        agAAAAAAAAAAAAAAAACLO2cAjDtoA4o7ZUiJO2S5iDtj8Ig7Y/6IO2P/iDtj/4g7Y/+IO2P/iDtk/4g7
        Y/+IO2P/iDtj/4g7Y/+IO2P/iDtj/4g7Y/+IO2P/iDtj/4g7Y/+IO2P/iDtk/4g7Y/+IO2P+iDtk9Ig7
        ZMKJO2VQjTxnBIs8ZgAAAAAAjDtnAI88awKJO2RoiDpj7Yg7Y/+IO2P/iDtj/4g7Y/+IOmP/iDpj/4g7
        Y/+IO2P/hzpj/4g7Y/+IO2P/iDpj/4g7Y/+IOmP/iDpj/4g7Y/+IO2P/iDtj/4g7Y/+IO2P/iDpj/4g7
        Y/+IO2P/iDtj/4c6Y/CIOmRujz1pA4w8ZgCIO2QAiTtlQog7ZOuOSG7/jURr/4tBaP+LQWj/i0Fo/45H
        bf+NRmz/jENp/4o/Zv+LQmn/i0Fo/4o/Z/+PSm//ikBn/45HbP+OR23/ij9m/4tCaf+KP2b/ikBn/4tB
        aP+OSG7/i0Bo/4o/Zv+LQWj/j0pv/4o/Z+2JOmRHiDtjAI08aQWHOWKkk1N2/7ecsf+2mrD/sI6m/6N0
        kf+wjqX/u6W4/7mgtv+uiaL/nGWF/6uEnv+leJT/sZCo/7ymuv+rhJ7/uJ+0/7qluP+hb43/tZmv/6d8
        l/+vi6T/roqj/7mgtf+wj6f/nmeH/66Jov+/rb//nmyL/4Y3YayMPGcIiTtlJYg6Y92PSm//rIWf/8Ct
        wP+8p7v/r4yk/8Ctvv+zlKr/uJ2y/7ukuP+mepb/t52y/66Ko//Hvs3/wa/B/8O0xf+0l6z/tpyx/7GR
        qf/Gu8r/v62+/8Kzw/+5obX/r42k/8S5yP+uiKH/uJ6z/7GSqf+kd5T/hjhh44k7ZS2JO2RIhzli85pg
        gf/Ar8H/pniV/7mit/+9qLv/qH6Z/6NykP+pf5r/x7zM/72pvP/Iv87/t56z/6+Mpf+2m7D/pXiU/7KT
        qv/Fusr/vKi7/7uluP/Et8f/uaG2/7GRqP+zlKz/p32Z/7aZr/+wjqb/w7bH/6V4lf+GOGH2iTtkT4o8
        ZFeIOmL4kU5z/7WYr/+uiqP/qYCb/5NSdv+IOmP/iDxk/4g6Y/+kdJH/rYeg/7KRqf+ykan/l1p8/4k9
        Zf+HOmP/ij9n/62GoP+zk6r/oGuL/6h7l/+nepb/lVZ5/4g8Zf+IO2P/iT1l/4g7Y/+fbIv/nGaG/4c5
        YvqJO2RgijxkWIg7ZPiIOmP/ij9n/4k+Zv+JPWX/iDxk/4g7Y/+IO2T/iDtk/4k8Zf+KQGf/ij9n/4tA
        aP+JPGX/iTtk/4k7ZP+IO2P/hTxi/306Xv94Nln/fThc/4c8ZP+JPGX/iDtj/4g7Y/+IO2P/iDtj/4k9
        Zf+IPWT/iDtk+4k7ZGWJPGRYiDtj+Yg7Y/+IO2P/iDtk/4g7Y/+IO2P/iDtk/4g7ZP+IO2T/iTtk/4k7
        ZP+IO2T/hjpi/384Xf90NFb/ZC9N/1MrRf9FLEH/PTBE/zotQv9OK0P/bTNS/4Y6Yv+IO2T/iDtk/4g7
        ZP+IO2T/iDtj/4g7Y/+HO2P7iTtkZYk8ZViIO2T5iDtk/4g7ZP+IO2T/iDtk/4k7ZP+JO2T/hztj/4I5
        X/94NVn/ajBQ/1ksR/9JK0H/QDBD/0E/UP9NVmf/YXOF/3ePo/+AnLH/a4Wc/zw8Uf9SK0L/eDZZ/4g7
        ZP+IO2P/iDtk/4g7Y/+IO2P/iDtj/4g7Y/uJO2RliTtlWIg7ZPmIO2P/iDtk/4g7ZP+JO2T/ejZb/14t
        Sv9NKkL/Qi1C/0A5S/9ITV3/WWd5/26El/+DnrL/krHG/5u70f+ev9X/nr7V/5S1zP+Jq8T/VWqC/0Eq
        QP9mMU3/hjpi/4g7Y/+IO2P/iDtj/4g7Y/+IO2P/iDtj+4k7ZGWJPGVYiDtj+Yg7Y/+IO2T/iTtk/3A1
        WP9COE3/UFxt/2Z6jP98lan/javA/5i4zv+evtX/n7/W/56+1f+dvdT/nb3T/5280/+bu9L/kLHJ/4Sl
        vv9tjKb/PDpQ/1UrQ/98N1z/iDtk/4g7Y/+IO2P/iDtj/4g7Y/+IO2P7iTtkZYk7ZViIO2P5iDtk/4g7
        ZP+EOmH/TTtW/4Gcsf+dvdT/n7/W/56/1v+dvdT/nL3T/5y80/+dvdP/nLzT/5y80/+cvNP/nLzT/5m5
        0P+Or8f/f6C6/3eZs/9NX3b/RSk//2syUP+HO2P/iDtj/4g7Y/+IO2P/iDtj/4g7Y/uJO2RliTtkWIc7
        Y/iIO2P/iDtk/4I4YP9SSmP/ocDY/56+1f+cvNP/nLzT/5y80/+cvNP/nLzT/5y80/+cvNP/nb3T/5y8
        0/+cvNP/lrbN/4ytxf97nLf/eJm0/2iFnv87NEr/Wi1G/384Xv+IO2T/iDtj/4g7Y/+IO2P/iDtj+4k7
        ZGWJO2VYiDtk+Yg7ZP+IO2T/iDpj/1Y6V/+RrMP/osPa/5y80/+cvNP/nLzT/5y80/+cvNP/nLzT/5u7
        0v+bu9L/nbzT/5++1P+Utcz/iKnC/3matP94mbP/d5iy/0dUa/9KKUD/bzNT/4g7Y/+IO2P/iDtj/4g7
        Y/+IO2P7iDtkZYk7ZFiIO2P4iDtj/4g7ZP+KO2T/ZjNW/3GEmv+oyOD/nLzS/5y80v+cvNL/nLzT/5++
        1P+kw9j/rcre/7bT5f/A2+z/xuHx/8Db6/+Wtcv/d5iz/3iZs/95mrX/YXyV/z0vRf9eLkj/gjlg/4g7
        ZP+IO2P/iDtk/4g7Y/uIO2RliTtlWIg7Y/iIO2T/iDtj/4k7ZP97Nl3/WFly/6fG3v+jwtj/q8nc/7TQ
        4/+92er/xeDw/8vn9//O6vv/yuf6/8fl+f/F5Pj/yef6/73Z6f9+nrf/d5mz/3iZs/91la//Qkpg/04p
        Qf90NVb/iTtk/4g7Y/+IO2P/iDtj+4g7ZGWJO2VYiDtj+Ig7ZP+IO2T/iDtk/4Y6Y/9SPVn/oLvQ/8zn
        9v/L5/j/yuf5/8jm+f/H5vr/o7zQ/4iesv+92+//xOP5/8Tj+P/E4/j/yub3/5WzyP92l7L/eJmz/3ma
        tf9acor/PitC/2MwS/+FOmL/iDtj/4c7Y/+HO2P7iDtkZYk7ZFiIO2P4iDtk/4g7ZP+IO2T/ijtk/2Az
        VP+Lnaz/zer8/8Tj+P/E4/j/xOP4/8bl+v9zhZj/NT9S/6rE1//H5fr/xeP4/8Xj+P/I5vn/s8/h/3qa
        tP94mbP/eJm0/3GQqv89QFb/UytD/3s3W/+IO2T/hztj/4c7Y/uIO2RliTtkWIg7Y/iIO2P/iDtj/4g7
        ZP+JO2T/dzVb/2Jjd//E4PH/xeT5/8Xj+P/F4/j/xuT5/7XR5f9/kqX/kKa6/8Xj9//G5fn/xeP4/8Xj
        +P/H4vP/iqnA/3eYsv94mbP/eZq1/01fdv9HKT//dzZY/4k7ZP+IO2P/iDtj+4g7ZGWJO2RYiDtj+Ig7
        Y/+IO2T/iDtj/4g7ZP+IO2P/WjZV/5Sntv/J5/v/xeP4/8Xj+P/F4/j/w+H2/2V1iP8qMUX/eo2g/7XQ
        5P/G5fn/xeP4/8rn+f+nxNf/d5iy/3iZs/94mbP/R1Zt/08rRP+AOV7/iDtk/4g7Y/+IO2T7iTtkZYk7
        ZFiIO2P4iDtk/4g7ZP+IO2T/iDtk/4k7ZP97Nl3/W1Vr/73Y6P/G5fn/xeP4/8Xj+P/H5vv/uNTo/21/
        kv8zPE//Pklc/5mxxP/G5Pn/xuT5/8Hd7f+Bobn/eJq0/2WBmv9FNk//eDZa/4g7Y/+IO2T/iDtk/4g7
        ZPuJO2RliTtlWIg7Y/iIO2P/iDtk/4g7ZP+IO2T/iDtk/4k7ZP9hM1X/gpGh/8ro+v/F4/j/xeP4/67J
        3f+fuMz/w+H2/6K6zv8wOEv/SFRn/77b7//F5Pn/yub4/5u5zf90la//SFFp/281Wf+KO2T/iDtk/4g7
        ZP+IO2T/iDtk+4k7ZGSJO2VRiDtk94g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4E4YP9VRl7/ssva/8fm
        +v/F4/j/cIKV/ykxRP95jKD/jqS3/y84S/9EUGP/vNnt/8Xk+f/I5vn/utXm/2B6kf9QNFL/hzpj/4g7
        ZP+IO2T/iDtk/4g7ZP+IO2T6iTtkXYk7ZT6IO2TviDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iTtk/2oz
        V/9xeoz/yeX3/8bk+f+yzeH/W2l8/zM8T/81PlH/SlZp/5ivw//H5vr/x+b7/8rp/P+71eT/TE1l/3Y2
        XP+JO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZPSJO2VLiTtlH4g7ZNeIO2T/iDtk/4g7ZP+IO2T/iDtk/4g7
        ZP+IO2T/hTpi/1U8V/+lu8r/yuj8/8fl+//D4fX/ss3h/7LN4P+/2+7/wt7w/7XP4P+ku8v/kKKy/2Fn
        ev9hNFX/iTtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk34o7ZSeOO2sDiDtkmYg7ZP+IO2T/iDtk/4g7
        ZP+IO2T/iDtk/4g7ZP+JO2T/czVa/15fc/+yy9r/uNPk/6nB0v+Wqrr/gI6f/2xwg/9dV23/V0Ve/1g5
        Vv9fM1T/cDRZ/4c7Y/+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+JO2ShjTtoBYg7ZACIO2U0iDtk4Yg7
        ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/ajVY/1VDXP9YSGH/WDxY/140VP9pM1b/dTRa/343
        Xv+FOWL/iDtk/4o7ZP+KO2X/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk5ok7ZTqJO2QAijpmAADH
        AACJO2RViDtk44g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+JO2T/hTli/4Q5Yf+IOmP/ijtk/4o7
        Zf+JO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZOiJO2RekzxtAYs7
        ZwAAAAAAiTpnAIs5agGJO2Q3iDtkpog7ZOeIO2T6iDtk/og7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7
        ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk/4g7ZP+IO2T/iDtk+og7ZOeIO2SpiTtlPI07
        agKLO2cAAAAAAAAAAAAAAAAAiDdnAIo7ZgCKO2YIiTtlM4k7ZF+JO2RziDtkeYg7ZHuIO2R8iDtkfIg7
        ZHuIO2R7iDtke4g7ZHuIO2R8iDtkfYg7ZH6IO2R/iTtkgYk7ZYOJO2WFiTtlhYk7ZHuJO2RgiTtlM4o7
        ZgmIO2UAmz5yAAAAAAAAAAAA8AAAD8AAAAOAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAHAAAABwAAAA/AAAA8=
</value>
  </data>
</root>